PART { 
	name = compresser
	module = Part
	author = mbalint

	mesh = compresser.mu 
	rescaleFactor = 1

	node_stack_top = 0.0, 1, 0.0, 0.0, 1.0, 0.0, 2 
	node_stack_bottom = 0.0, -1, 0.0, 0.0, -1.0, 0.0, 2	
	node_attach = 1.25, 0, 0, 1, 0, 0, 2
	attachRules = 1,1,1,1,0 // attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision

	TechRequired = advScienceTech
	entryCost = 5000
	cost = 1500
	category = Utility 
	subcategory = 0
	title = Ulti-Compress-Machine
	manufacturer = Dream Builder Industries
	description = Have you ever wondered to have the ability to build what you want from blocks, like in a voxel-based game? Now with the Dream Builder Industries' Ulti-Compress-Machine you can! Just put in some dirt, fed it with electricity, and watch the magic happen!
	
	mass = 2
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 8
	maxTemp = 2000
	breakingForce = 50 
	breakingTorque = 50
	
	MODULE
	{
		name = ModuleKISInventory
		maxVolume = 2000
		externalAccess = true
		internalAccess = true
		slotsX = 2
		slotsY = 1
		slotSize = 50
		itemIconResolution = 128
		selfIconResolution = 128
		openSndPath = KIS/Sounds/containerOpen
		closeSndPath = KIS/Sounds/containerClose
		defaultMoveSndPath = KIS/Sounds/itemMove
	}

	MODULE
	{
		name = ModuleSTBBlockCompresser
		maxQueue = 5
		EcPerSec = 1
		reqSec = 30
	}
	MODULE
	{
		name = FlagDecal
		textureQuadName = decal
	}
	
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Material Maker
		StartActionName = Start Making
		StopActionName = Stop Making
		
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 100000
			key = 750 50000
			key = 1000 10000
			key = 1250 500	
			key = 2000 50	
			key = 4000 0
		}			
		GeneratesHeat = true
		DefaultShutoffTemp = .8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0 
		}
		
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		Specialty = Engineer
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.5
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 10
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MetalPakk
			Ratio = 0.55
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElektricPakk
			Ratio = 0.45
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = SciencePakk
			Ratio = 0.35
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	

	
	RESOURCE
	{
		name = MetalPakk
		amount = 200
		maxAmount = 200
	}

	RESOURCE
	{
		name = ElektricPakk
		amount = 200
		maxAmount = 200
	}

	RESOURCE
	{
		name = SciencePakk
		amount = 200
		maxAmount = 200
	}
	
	RESOURCE
	{
		name = Dirt
		amount = 0
		maxAmount = 200
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 20
		maxAmount = 20
	}


} 